<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="11" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-08-06T23:18:07 IST" name="Mytest" finished-at="2021-08-06T23:18:07 IST" duration-ms="88">
    <groups>
    </groups>
    <test started-at="2021-08-06T23:18:07 IST" name="Regression" finished-at="2021-08-06T23:18:07 IST" duration-ms="88">
      <class name="Abc.Start">
        <test-method signature="demo1(java.lang.String,java.lang.String)[pri:0, instance:Abc.Start@6c130c45]" started-at="2021-08-06T23:18:07 IST" name="demo1" data-provider="getdata" finished-at="2021-08-06T23:18:07 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1stusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1stpass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1 -->
        <test-method signature="demo1(java.lang.String,java.lang.String)[pri:0, instance:Abc.Start@6c130c45]" started-at="2021-08-06T23:18:07 IST" name="demo1" data-provider="getdata" finished-at="2021-08-06T23:18:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2ndusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2ndpass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1 -->
        <test-method signature="demo1(java.lang.String,java.lang.String)[pri:0, instance:Abc.Start@6c130c45]" started-at="2021-08-06T23:18:07 IST" name="demo1" data-provider="getdata" finished-at="2021-08-06T23:18:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3drusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3rdpass]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1 -->
      </class> <!-- Abc.Start -->
      <class name="Abc.Loan">
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:Abc.Loan@247d8ae]" started-at="2021-08-06T23:18:07 IST" name="beforeclass" finished-at="2021-08-06T23:18:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method signature="homeloan()[pri:0, instance:Abc.Loan@247d8ae]" started-at="2021-08-06T23:18:07 IST" name="homeloan" finished-at="2021-08-06T23:18:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeloan -->
        <test-method is-config="true" signature="pre()[pri:0, instance:Abc.Loan@247d8ae]" started-at="2021-08-06T23:18:07 IST" name="pre" finished-at="2021-08-06T23:18:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pre -->
        <test-method signature="homeloan1()[pri:0, instance:Abc.Loan@247d8ae]" started-at="2021-08-06T23:18:07 IST" name="homeloan1" finished-at="2021-08-06T23:18:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeloan1 -->
        <test-method is-config="true" signature="pre()[pri:0, instance:Abc.Loan@247d8ae]" started-at="2021-08-06T23:18:07 IST" name="pre" finished-at="2021-08-06T23:18:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pre -->
        <test-method signature="mobilelloan()[pri:0, instance:Abc.Loan@247d8ae]" started-at="2021-08-06T23:18:07 IST" name="mobilelloan" finished-at="2021-08-06T23:18:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobilelloan -->
        <test-method is-config="true" signature="pre()[pri:0, instance:Abc.Loan@247d8ae]" started-at="2021-08-06T23:18:07 IST" name="pre" finished-at="2021-08-06T23:18:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pre -->
        <test-method signature="personalloan()[pri:0, instance:Abc.Loan@247d8ae]" started-at="2021-08-06T23:18:07 IST" name="personalloan" finished-at="2021-08-06T23:18:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personalloan -->
        <test-method is-config="true" signature="pre()[pri:0, instance:Abc.Loan@247d8ae]" started-at="2021-08-06T23:18:07 IST" name="pre" finished-at="2021-08-06T23:18:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pre -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:Abc.Loan@247d8ae]" started-at="2021-08-06T23:18:07 IST" name="afterclass" finished-at="2021-08-06T23:18:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- Abc.Loan -->
      <class name="Abc.Demo">
        <test-method signature="demo11()[pri:0, instance:Abc.Demo@51f116b8]" started-at="2021-08-06T23:18:07 IST" name="demo11" finished-at="2021-08-06T23:18:07 IST" duration-ms="14" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at Abc.Demo.demo11(Demo.java:15)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo11 -->
        <test-method signature="demo12()[pri:0, instance:Abc.Demo@51f116b8]" started-at="2021-08-06T23:18:07 IST" name="demo12" finished-at="2021-08-06T23:18:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo12 -->
      </class> <!-- Abc.Demo -->
    </test> <!-- Regression -->
  </suite> <!-- Mytest -->
</testng-results>
